s2p<-((n1-1)*s1^2+(n2-1)*s2^2)/(n1+n2-2)
(m2-m1)+(c(-1,1))*qt(p=.025,df=n1+n2-2,lower.tail =F)*(s2p*((1/n1)+(1/n2)))^.5
n1<-9
m1<--3
s1<-1.5
n2<-9
m2<-1
s2<-1.8
s2p<-((n1-1)*s1^2+(n2-1)*s2^2)/(n1+n2-2)
(m1-m2)+(c(-1,1))*qt(p=.05,df=n1+n2-2,lower.tail =F)*(s2p*((1/n1)+(1/n2)))^.5
mu0 = 30
sigma = 4
n = 16
alpha = 0.05
z = qnorm(1 - alpha)
mua<-32
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
?seq
32
mua<-seq(30,36,120)
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
mua<-seq(30,36,120)
mua
mua<-30:36
mua
seq(1, 9, by = 2)
mua<-seq(30,36,by=120)
mua<-30:36
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
plot(pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE),mua)
plot(mua,pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE))
power<-pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
plot(mua,power)
mua<-seq(30,36,by=120)
seq(30,36,by=120)
mua<-seq(30,36,by=.1)
power<-pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
plot(mua,power)
plot(mua,power,type = "l")
power1<-pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
n = 16
power16<-pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
n = 32
power32<-pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
plot(mua,power16,type = "l")
lines(mua,power32,type = "l")
lines(mua,power32,type = "l",col="red")
plot(mua,power16,type = "l",col="blue")
lines(mua,power32,type = "l",col="red")
n = 64
power64<-pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
lines(mua,power64,type = "l",col="green")
n = 128
power128<-pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
lines(mua,power128,type = "l",col="yellow")
n = 8
power8<-pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
lines(mua,power8,type = "l")
power8<-pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
n = 8
power.t.test(power = 0.8, delta = .01, sd = .04, type = "one.sample", alt = "one.sid\
ed")$n
power.t.test(power = 0.8, delta = .01, sd = .04, type = "one.sample", alt = "one.sid\ed")$n
power.t.test(power = 0.8, delta = .01, sd = .04, type = "one.sample", alt = "one.sided")$n
power.t.test(power = 0.8, delta = .01, sd = .04, type = "one.sample", alt = "one.sided")$n
library(UsingR)
str(father.son)
data(father.son)
power8
sample(power8,5,replase=T)
sample(power8,5,replace=T)
matrix(sample(power8,n,replace=T))
matrix(sample(power8,n,replace=T),n)
?apply
matrix(sample(power8,n*sigma,replace=T),n,sigma)
apply(matrix(sample(power8,n*sigma,replace=T),n,sigma),1,mean)
?t.test
subject<-c(1,2,3,4,5)
baseline<-c(140,138,150,148,135)
week2<-(132,135,151,146,130)
t.test(x=baseline, y = week2,
alternative ="two.sided",
paired = T, var.equal = FALSE)
week2<-c(132,135,151,146,130)
t.test(x=baseline, y = week2,
alternative ="two.sided",
paired = T, var.equal = FALSE)
t.test(x=baseline, y = week2,
alternative ="two.sided",
paired = T, var.equal = T)
?qt
n<-9
m<-1100
s<-30
qt(0.975,n-1)
m+c(-1,1)*qt(0.975,n-1)*s/sqrt(n)
pbinom(2, size = 4, prob = 0.5, lower.tail = FALSE)
ppois(10, lambda = .01 * 1787)
n1<-9
n2<-9
x1<--3
x2<-1
s1<-1.5
s2<-1.8
t<-(x1-x2)/((s1*s1/n1)+(s2*s2/n2))
t
pt(t,n1+n2-2)
power.t.test(n = 100, delta = 2/4, sd = .04, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 100, delta = .01, sd = .04, type = "one.sample", alt = "one.sided")$power
?power.t.test
power.t.test(power=.9, delta = .01, sd = .04, type = "one.sample", alt = "one.sided")$power
power.t.test(power=.8, delta = .01, sd = .04, type = "one.sample", alt = "one.sided")$power
power.t.test(power=.9, delta = .01, sd = .04, type = "one.sample", alt = "one.sided")
library(swirl)
swirl()
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
library(swirl)
swirl()
1-(2+1)/36
deck
52
4/52
0
12/52
2/51
1.6*.8/2
.64
mypdf
mypdf(1.6)
?integrate
integrate(mypdf,0,1.6)
sqrt(2)
.997*.001
(1-.985)*(1-.001)
(.997*.001)/((.997*.001)+((1-.985)*(1-.001)))
6*(6+1)/2/6
expect_dice
pmf
expect_dice(dice_fair)
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
(edh+edl)/2
myfunc
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
dice_sqr
ex2_fair<-sum(dice_sqr * dice_fair)
ex2_fair-(sum(sqrt(dice_sqr)*dice_fair))^2
ex2_fair-3.5^2
sum(dice_sqr * dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
1-((choose(5,0)*.8^0*(1-.8)^(5-0))+(choose(5,1)*.8^1*(1-.8)^(5-1))+(choose(5,2)*.8^2*(1-.8)^(5-2)))
pbinom(q=2,size=5,prob=.8,lower.tail = F)
pbinom(2,size=5,prob=.8,lower.tail = F)
pbinom(2,size=5,prob=.8,lower.tail = FALSE)
qnorm(.1)
0
qnorm(.975,3,2)
1.96*2+3
pnorm(1200,1020,50,lower.tail = FALSE)
pnorm((1200-1020)/50,lower.tail = FALSE)
qnorm(.75,1020,50)
.53
.53
ppois(3,2.5*4)
pbinom(5,1000,.01)
ppois(5,1000*.01)
coinPlot()
coinPlot
coinPlot(10)
coinPlot(10000)
qnorm(.95)
.6+c(-1,1)*qnorm(.975)*sqrt(.6(1-.6)/100)
.6+c(-1,1)*qnorm(.975)*sqrt(.6*(1-.6)/100)
binom.test(60,100)$conf.int
mywald
mywald(.2)
ACCompar
ACCompar(20)
lamb<-5/94.32
lamb+c(-1,1)*qnorm(.975)*sqrt(lamb)
lamb +c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(lamb)$conf
poisson.test(5/94.32)$conf
poisson.test(5,94.32)$conf
myplot
myplot(2)
myplot(20)
myplot2
myplot2(2)
qt(.975,2)
qt(.975,20)
qt(.975,19)
myplot2(20)
sleep
range
range(g1)
range(g2)
range(g1-g2)
g2-g1
difference <- g2-g1
range(difference)
mean(difference)
sd(difference)
s <- sd(difference)
mean(difference)+c(-1,1)*qt(.975,9)*s/sqrt(10)
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(sleep)$conf.int
t.test(difference)$conf.int
sp<-(8-1)(15.34)^2+(21-1)(18.23)^2
sp<-(8-1)*(15.34)^2+(21-1)*(18.23)^2
ns<-(8-1)+(21-1)
sp<-sqrt(sp/ns)
c(-1,1)*qt(ns-1)*sp/sqrt(ns)
?qt
c(-1,1)*qt(.975,ns-1)*sp/sqrt(ns)
132.86-127.44+c(-1,1)*qt(.975,ns-1)*sp/sqrt(ns)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp<-sqrt(var(g1,g1)/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2,g1,paired=FALSE)$conf
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num<-(15.34/8 + 18.23/21)^2
num <- (15.34^2/8 + 18.23^2/21)^2
den<-15.34^4/8^2/(8-1)
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf<-num/den
132.86-127.44+c(-1,1)*qt(.975,mydf)sqrt((15.34)^2/8 + (18.23)^2/21)
132.86-127.44+c(-1,1)*qt(.975,mydf)*sqrt((15.34)^2/8 + (18.23)^2/21)
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
1
2
(32-30)/(10/sqrt(16))
15
qt(.95,15)
dim(fs)
t.test(fs$sheight-fs$fheight)
11.7885
| * sd(fs$sheight-fs$fheight)/sqrt(1078)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
8
pt(2.5,15)
pt(2.5,15,lower.tail = F)
pt(2.5,15,lower.tail = FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2,lower.tail = FALSE)
mybin
pbinom(6,8,.5,lower.tail = FALSE)
pbinom(7,8,.5,lower.tail = FALSE)
pbinom(7,8,.5)
ppois(9,5,lower.tail = FALSE)
swirl()
library(swirl)
swirl()
myplot
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z = qnorm(.95)
z <- qnorm(.95)
pnorm(30+z,30,lower.tail = FALSE)
pnorm(30+z,32,lower.tail = FALSE)
pnorm(30+z,32,sd=1,lower.tail = FALSE)
pnorm(30+z*2,32,sd=1,lower.tail = FALSE)
pnorm(30+z*2,32,sd=2,lower.tail = FALSE)
power.t.test(n = 16, delta = 2 /
| 4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2 /
4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$power
power.t.test(power=.8,delta=2/4,sd=1,type="one.sample",alt="one.sided")$n
power.t.test(power=.8,delta=2,sd=4,type="one.sample",alt="one.sided")$n
power.t.test(power=.8,delta=100,sd=200,type="one.sample",alt="one.sided")$n
power.t.test(power=.8,n=26,sd=1,type="one.sample",alt="one.sided")$delta
power.t.test(power=.8,n=27,sd=1,type="one.sample",alt="one.sided")$delta
head(pValues)
sum(pvalues<.05)
sum(pValues<.05)
sum(p.adjust(pValues,method="bonferroni")<.05)
sum(p.adjust(pValues,method="BH")<.05)
tail(trueStatus)
table(pValues2<.05,trueStatus)
100*24/500
24/500
table(p.adjust(pValues2,method="bonferonni")<.05,trueStatus)
table(p.adjust(pValues2,method="bonferronni")<.05,trueStatus)
table(p.adjust(pValues2,method="bonferroni")<.05,trueStatus)
table(p.adjust(pValues2,method="BH")<.05,trueStatus)
3.5
print(g2)
nh
head(sh)
nh
median(resampledMedians)
median(sh)
sam<-sample(fh,nh*B,replace=TRUE)
resam<-matrix(sam,B,nh)
meds<-apply(resam,1,median)
median(fh)-median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians,c(.025,.975))
quantile(meds,c(.025,.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcoutns
BCcounts
group
testStat()
testStat
obs<-testStat(BCcounts,group)
obs
mean(Bdata$count-Cdata$count)
sample(group)
perms <-sapply(1:10000,function(i) testStat(BCcounts, sample(group)))
perms > obs
mean(perms>obs)
testStat(DEcounts,group)
perms <- sapply(1 : 10000,function(i) testStat(DEcounts, sample(group)))
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(10000))
mns = NULL
for (i in 1 : 10000) mns = c(mns, mean(runif(40)))
hist(mns)
setwd("C:/Users/Luc/Documents/coursera/Reproducible Research/RepData_PeerAssessment1")
unzip("activity.zip")
list.files("activity")
ls()
activity <- read.csv("./activity.csv")
View(activity)
sum(activity$steps)
sum(activity$steps,NA=F)
sum(activity$steps,rm.NA=TRUE)
?sum
sum(activity$steps,na.rm = =TRUE)
sum(activity$steps,na.rm = TRUE)
activity %>% group_by(date) %>% summarise(sum_steps = sum(steps))
library(dplyr)
activity %>% group_by(date) %>% summarise(sum_steps = sum(steps))
sum_steps<-activity %>% group_by(date) %>% summarise(sum_steps = sum(steps))
View(sum_steps)
sum_steps<-activity %>% group_by(date) %>% summarise(sum_steps = sum(steps,na.rm = TRUE))
View(sum_steps)
hist(sum_steps$sum_steps)
hist(sum_steps$sum_steps, main='Total number of steps taken each day',xlab='Number of steps')
hist(sum_steps$sum_steps, main='Total number of steps taken each day',xlab='Number of steps',breaks=10)
sum_steps<-activity %>% filter(stepa !is.na) %>%group_by(date) %>% summarise(sum_steps = sum(steps,na.rm = TRUE))
sum_steps<-activity %>% filter(steps !is.na) %>%group_by(date) %>% summarise(sum_steps = sum(steps,na.rm = TRUE))
sum_steps<-activity %>% filter(steps ==NA) %>%group_by(date) %>% summarise(sum_steps = sum(steps,na.rm = TRUE))
View(sum_steps)
sum_steps<-activity %>% filter(steps !==NA) %>%group_by(date) %>% summarise(sum_steps = sum(steps,na.rm = TRUE))
sum_steps<-activity %>% filter(steps !=NA) %>%group_by(date) %>% summarise(sum_steps = sum(steps,na.rm = TRUE))
View(sum_steps)
sum_steps<-activity %>% filter(!is.na(steps) %>%group_by(date) %>% summarise(sum_steps = sum(steps,na.rm = TRUE))
sum_steps<-activity %>% filter(!is.na(steps)) %>%group_by(date) %>% summarise(sum_steps = sum(steps,na.rm = TRUE))
sum_steps<-activity %>% filter(!is.na(steps)) %>%group_by(date) %>% summarise(sum_steps = sum(steps,na.rm = TRUE))
View(sum_steps)
hist(sum_steps$sum_steps, main='Total number of steps taken each day',xlab='Number of steps',breaks=10)
activity %>% filter(!is.na(steps)) %>%group_by(date) %>% summarise(mean_steps = mean(steps),median_steps=median(steps))
View(sum_steps)
activity %>% filter(!is.na(steps)) %>%group_by(date) %>% summarise(mean_steps = mean(steps))
activity %>% filter(!is.na(steps)) %>%group_by(date) %>% summarise(median_steps = median(steps))
View(sum_steps)
activity %>% filter(!is.na(steps)) %>%group_by(date) %>% summarise(mean_steps = mean(steps))
activity %>% filter(!is.na(steps)) %>%group_by(date) %>% summarise(median_steps = median(steps))
median=activity %>% filter(!is.na(steps)) %>%group_by(date) %>% summarise(median_steps = median(steps))
View(median)
mean(sum_steps$sum_steps)
median(sum_steps$sum_steps)
intervals<-activity %>% filter(!is.na(steps)) %>%group_by(interval) %>% summarise(mean_steps = mean(steps))
View(intervals)
plot(intervals$mean_steps,intervals$interval)
plot(intervals$interval,intervals$mean_steps)
plot(intervals$interval,intervals$mean_steps,type = "l")
plot(intervals$interval,intervals$mean_steps,type = "l",main='average number of steps taken vs 5-minute interval',
xlab='5-minute interval',ylab='average number of steps')
intervals%>%summarise(max=max(mean_steps))
max(intervals$mean_steps)
intervals[mean_steps==max(intervals$mean_steps)]
intervals[intervals$mean_steps==max(intervals$mean_steps)]
intervals[,intervals$mean_steps==max(intervals$mean_steps)]
intervals[intervals$mean_steps==max(intervals$mean_steps),]
describe(activity$steps)
summary(activity$steps)
mean_steps<-activity %>% filter(!is.na(steps)) %>%group_by(interval) %>% summarise(mean_steps = mean(steps))
View(mean_steps)
mean_steps<-activity %>% filter(!is.na(steps)) %>%group_by(interval) %>% summarise(mean_steps = round(mean(steps)))
View(mean_steps)
left_join(activity, mean_steps, by = "interval")
activity2<-left_join(activity, mean_steps, by = "interval")
View(activity2)
mean_steps<-activity %>% filter(!is.na(steps)) %>%group_by(interval) %>% summarise(mean_int_steps = round(mean(steps)))
activity2<-left_join(activity, mean_steps, by = "interval")
View(activity2)
View(activity2)
activity2$steps_imputed<-ifelse(is.na(activity2$steps), activity2$mean_int_steps, activity2$steps)
hist(activity2$steps_imputed, main='Total number of imputed steps taken each day',xlab='Number of steps',breaks=10)
mean(activity2$steps_imputed)
median(activity2$steps_imputed)
sum_steps_imputed<-activity2 %>%group_by(date) %>% summarise(sum_steps_imputed = sum(steps_imputed))
hist(activity2$steps_imputed, main='Total number of imputed steps taken each day',xlab='Number of steps',breaks=10)
mean(activity2$steps_imputed)
median(activity2$steps_imputed)
hist(sum_steps_imputed$steps_imputed, main='Total number of imputed steps taken each day',xlab='Number of steps',breaks=10)
mean(sum_steps_imputed$steps_imputed)
median(sum_steps_imputed$steps_imputed)
hist(sum_steps_imputed$sum_steps_imputed, main='Total number of imputed steps taken each day',xlab='Number of steps',breaks=10)
mean(sum_steps_imputed$sum_steps_imputed)
median(sum_steps_imputed$sum_steps_imputed)
mean(sum_steps$sum_steps)
median(sum_steps$sum_steps)
weekdays(activity$date)
activity$date <- as.POSIXct(activity$date)
weekdays(activity$date)
weekdays(activity$date)
Sys.setlocale("LC_TIME", "English")
weekdays(activity$date)
activity2$day<-ifelse(weekdays(activity$date) %in ('Saturday','Sunday'), 'weekend', 'weekday')
activity2$day<-ifelse(weekdays(activity$date) %in% ('Saturday','Sunday'), 'weekend', 'weekday')
activity2$day<-ifelse(weekdays(activity$date)=='Saturday' | weekdays(activity$date)=='Sunday'), 'weekend', 'weekday')
activity2$day<-ifelse(weekdays(activity$date)=='Saturday' | weekdays(activity$date)=='Sunday', 'weekend', 'weekday')
intervals_day<-activity2 %>%group_by(day,interval) %>% summarise(mean_steps_imputed = mean(steps_imputed))
View(intervals_day)
View(intervals_day)
ggplot(intervals_day, aes(x = interval, y = mean_steps_imputed)) + geom_line() +
xlab("Interval") + ylab("Average Imputed Steps") + facet_grid(. ~ day.type)
library(ggplot2)
ggplot(intervals_day, aes(x = interval, y = mean_steps_imputed)) + geom_line() +
xlab("Interval") + ylab("Average Imputed Steps") + facet_grid(. ~ day.type)
ggplot(intervals_day, aes(x = interval, y = mean_steps_imputed)) + geom_line() +
xlab("Interval") + ylab("Average Imputed Steps") + facet_grid(. ~ day)
ggplot(intervals_day, aes(x = interval, y = mean_steps_imputed)) + geom_line() +
xlab("Interval") + ylab("Average Imputed Steps") + facet_grid(day ~ .)
ggplot(intervals_day, aes(x = interval, y = mean_steps_imputed)) + geom_line() +
xlab("interval") + ylab("average imputed steps") + main='Average number of steps taken, weekday vs weekend' +
facet_grid(day ~ .)
ggplot(intervals_day, aes(x = interval, y = mean_steps_imputed)) + geom_line() +
xlab("interval") + ylab("average imputed steps") + facet_grid(day ~ .)
ggplot(intervals_day, aes(x = interval, y = mean_steps_imputed)) + geom_line() +
xlab("interval") + ylab("average imputed steps") + facet_grid(day ~ .) +
main='Average number of steps taken, weekday vs weekend'
ggplot(intervals_day, aes(x = interval, y = mean_steps_imputed)) + geom_line() +
xlab("interval") + ylab("average imputed steps") + facet_grid(day ~ .) +
main=('Average number of steps taken, weekday vs weekend')
ggplot(intervals_day, aes(x = interval, y = mean_steps_imputed)) + geom_line() +
xlab("interval") + ylab("average imputed steps") + facet_grid(day ~ .) +
main=("Average number of steps taken, weekday vs weekend")
ggplot(intervals_day, aes(x = interval, y = mean_steps_imputed)) + geom_line() +
xlab("interval") + ylab("average imputed steps") + facet_grid(day ~ .) +
main("Average number of steps taken, weekday vs weekend")
ggplot(intervals_day, aes(x = interval, y = mean_steps_imputed)) + geom_line() +
xlab("interval") + ylab("average imputed steps") + facet_grid(day ~ .) +
title("Average number of steps taken, weekday vs weekend")
ggplot(intervals_day, aes(x = interval, y = mean_steps_imputed)) + geom_line() +
xlab("interval") + ylab("average imputed steps") + facet_grid(day ~ .) +
ggtitle("Average number of steps taken, weekday vs weekend")
setwd("C:/Users/Luc/Documents/coursera/Reproducible Research/RepData_PeerAssessment1")
sum_steps<-activity %>% filter(!is.na(steps)) %>%group_by(date) %>% summarise(sum_steps = sum(steps))
hist(sum_steps$sum_steps, main='Total number of steps taken each day',xlab='Number of steps',breaks=10)
mean(sum_steps$sum_steps)
median(sum_steps$sum_steps)
```
#For this part of the assignment, you can ignore the missing values in the dataset.
library(dplyr)
sum_steps<-activity %>% filter(!is.na(steps)) %>%group_by(date) %>% summarise(sum_steps = sum(steps))
hist(sum_steps$sum_steps, main='Total number of steps taken each day',xlab='Number of steps',breaks=10)
mean(sum_steps$sum_steps)
median(sum_steps$sum_steps)
sum_steps<-activity %>% filter(!is.na(steps)) %>%group_by(date) %>% summarise(sum_steps = sum(steps))
sum_steps<-activity %>% filter(!is.na(steps)) %>%group_by(date) %>% summarise(sum_steps = sum(steps))
View(sum_steps)
hist(sum_steps$sum_steps, main='Total number of steps taken each day',xlab='Number of steps',breaks=10)
mean(sum_steps$sum_steps)
summary(activity$steps)
mean_steps<-activity %>% filter(!is.na(steps)) %>%group_by(interval) %>% summarise(mean_int_steps = round(mean(steps)))
activity2<-left_join(activity, mean_steps, by = "interval")
activity2<-left_join(activity, mean_steps, by = "interval")
activity2$steps_imputed<-ifelse(is.na(activity2$steps), activity2$mean_int_steps, activity2$steps)
hist(sum_steps_imputed$sum_steps_imputed, main='Total number of imputed steps taken each day',xlab='Number of steps',breaks=10)
mean(sum_steps_imputed$sum_steps_imputed)
median(sum_steps_imputed$sum_steps_imputed)
View(sum_steps_imputed)
View(sum_steps_imputed)
View(activity2)
